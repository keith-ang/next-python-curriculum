{
    "day": 26,
    "title": "Python for web",
    "content": {
        "tag": "root",
        "children": [
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Day 26 - Python for web"
                    }
                ]
            },
            
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "30DaysOfPython",
                            "src": "../images/30DaysOfPython_banner3@2x.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#-day-26"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ“˜ Day 26"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#python-for-web"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Python for Web"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#flask"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Flask"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#folder-structure"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Folder structure"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#setting-up-your-project-directory"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Setting up your project directory"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#creating-routes"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Creating routes"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#creating-templates"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Creating templates"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#python-script"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Python Script"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#navigation"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Navigation"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#creating-a-layout"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Creating a layout"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#serving-static-file"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Serving Static File"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#deployment"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Deployment"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#creating-heroku-account"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Creating Heroku account"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#login-to-heroku"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Login to Heroku"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#create-requirements-and-procfile"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Create requirements and Procfile"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#pushing-project-to-heroku"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Pushing project to heroku"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#exercises-day-26"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Exercises: Day 26"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {
                    "id": "day-26"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ“˜ Day 26"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "python-for-web"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Python for Web"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Python is a general purpose programming language and it can be used for many places. In this section, we will see how we use Python for the web. There are many Python web frame works. Django and Flask are the most popular ones. Today, we will see how to use Flask for web development."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "flask"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Flask"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Flask is a web development framework written in Python. Flask uses Jinja2 template engine. Flask can be also used with other modern front libraries such as React."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "If you did not install the virtualenv package yet install it first. Virtual environment will allows to isolate project dependencies from the local machine dependencies."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h4",
                "attributes": {
                    "id": "folder-structure"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Folder structure"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "After completing all the step, your project file structure should look like this:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "â”œâ”€â”€ Procfile\nâ”œâ”€â”€ app.py\nâ”œâ”€â”€ env\nâ”‚Â Â  â”œâ”€â”€ bin\nâ”œâ”€â”€ requirements.txt\nâ”œâ”€â”€ static\nâ”‚Â Â  â””â”€â”€ css\nâ”‚Â Â      â””â”€â”€ main.css\nâ””â”€â”€ templates\n    â”œâ”€â”€ about.html\n    â”œâ”€â”€ home.html\n    â”œâ”€â”€ layout.html\n    â”œâ”€â”€ post.html\n    â””â”€â”€ result.html"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "setting-up-your-project-directory"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Setting up your project directory"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Follow the following steps to get started with Flask."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Step 1: install virtualenv using the following command."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "pip install virtualenv"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Step 2:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "asabeneh@Asabeneh:~/Desktop$ mkdir python_for_web\nasabeneh@Asabeneh:~/Desktop$ cd python_for_web/\nasabeneh@Asabeneh:~/Desktop/python_for_web$ virtualenv venv\nasabeneh@Asabeneh:~/Desktop/python_for_web$ source venv/bin/activate\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ pip freeze\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ pip install Flask\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ pip freeze\nClick==7.0\nFlask==1.1.1\nitsdangerous==1.1.0\nJinja2==2.10.3\nMarkupSafe==1.1.1\nWerkzeug==0.16.0\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We created a project director named python_for_web. Inside the project we created a virtual environment"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "venv"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "which could be any name but I prefer to call it"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "venv"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": ". Then we activated the virtual environment. We used pip freeze to check the installed packages in the project directory. The result of pip freeze was empty because a package was not installed yet."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Now, let's create app.py file in the project directory and write the following code. The app.py file will be the main file in the project. The following code has flask module, os module."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "creating-routes"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Creating routes"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The home route."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# let's import the flask\nfrom flask import Flask\nimport os # importing operating system module\n\napp = Flask(__name__)\n\n@app.route('/') # this decorator create the home route\ndef home ():\n    return '<h1>Welcome</h1>'\n\n@app.route('/about')\ndef about():\n    return '<h1>About us</h1>'\n\n\nif __name__ == '__main__':\n    # for deployment we use the environ\n    # to make it work for both production and development\n    port = int(os.environ.get(\"PORT\", 5000))\n    app.run(debug=True, host='0.0.0.0', port=port)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "To run the flask application, write python app.py in the main flask application directory."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "After you run"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "python app.py"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "check local host 5000."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Let us add additional route.\nCreating about route"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# let's import the flask\nfrom flask import Flask\nimport os # importing operating system module\n\napp = Flask(__name__)\n\n@app.route('/') # this decorator create the home route\ndef home ():\n    return '<h1>Welcome</h1>'\n\n@app.route('/about')\ndef about():\n    return '<h1>About us</h1>'\n\nif __name__ == '__main__':\n    # for deployment we use the environ\n    # to make it work for both production and development\n    port = int(os.environ.get(\"PORT\", 5000))\n    app.run(debug=True, host='0.0.0.0', port=port)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Now, we added the about route in the above code. How about if we want to render an HTML file instead of string? It is possible to render HTML file using the function"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "render_templae"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": ". Let us create a folder called templates and create home.html and about.html in the project directory. Let us also import the"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "render_template"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "function from flask."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "creating-templates"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Creating templates"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Create the HTML files inside templates folder."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "home.html"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Home</title>\n  </head>\n\n  <body>\n    <h1>Welcome Home</h1>\n  </body>\n</html>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "about.html"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>About</title>\n  </head>\n\n  <body>\n    <h1>About Us</h1>\n  </body>\n</html>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "python-script"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Python Script"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "app.py"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# let's import the flask\nfrom flask import Flask, render_template\nimport os # importing operating system module\n\napp = Flask(__name__)\n\n@app.route('/') # this decorator create the home route\ndef home ():\n    return render_template('home.html')\n\n@app.route('/about')\ndef about():\n    return render_template('about.html')\n\nif __name__ == '__main__':\n    # for deployment we use the environ\n    # to make it work for both production and development\n    port = int(os.environ.get(\"PORT\", 5000))\n    app.run(debug=True, host='0.0.0.0', port=port)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "As you can see to go to different pages or to navigate we need a navigation. Let's add a link to each page or let's create a layout which we use to every page."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "navigation"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Navigation"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "<ul>\n  <li><a href=\"/\">Home</a></li>\n  <li><a href=\"/about\">About</a></li>\n</ul>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Now, we can navigate between the pages using the above link. Let us create additional page which handle form data. You can call it any name, I like to call it post.html."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We can inject data to the HTML files using Jinja2 template engine."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# let's import the flask\nfrom flask import Flask, render_template, request, redirect, url_for\nimport os # importing operating system module\n\napp = Flask(__name__)\n\n@app.route('/') # this decorator create the home route\ndef home ():\n    techs = ['HTML', 'CSS', 'Flask', 'Python']\n    name = '30 Days Of Python Programming'\n    return render_template('home.html', techs=techs, name = name, title = 'Home')\n\n@app.route('/about')\ndef about():\n    name = '30 Days Of Python Programming'\n    return render_template('about.html', name = name, title = 'About Us')\n\n@app.route('/post')\ndef post():\n    name = 'Text Analyzer'\n    return render_template('post.html', name = name, title = name)\n\n\nif __name__ == '__main__':\n    # for deployment\n    # to make it work for both production and development\n    port = int(os.environ.get(\"PORT\", 5000))\n    app.run(debug=True, host='0.0.0.0', port=port)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Let's see the templates too:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "home.html"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Home</title>\n  </head>\n\n  <body>\n    <ul>\n      <li><a href=\"/\">Home</a></li>\n      <li><a href=\"/about\">About</a></li>\n    </ul>\n    <h1>Welcome to {{name}}</h1>\n     <ul>\n    {% for tech in techs %}\n      <li>{{tech}}</li>\n    {% endfor %}\n    </ul>\n  </body>\n</html>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "about.html"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>About Us</title>\n  </head>\n\n  <body>\n    <ul>\n      <li><a href=\"/\">Home</a></li>\n      <li><a href=\"/about\">About</a></li>\n    </ul>\n    <h1>About Us</h1>\n    <h2>{{name}}</h2>\n  </body>\n</html>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "creating-a-layout"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Creating a layout"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "In the template files, there are lots of repeated codes, we can write a layout and we can remove the repetition. Let's create layout.html inside the templates folder.\nAfter we create the layout we will import to every file."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h4",
                "attributes": {
                    "id": "serving-static-file"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Serving Static File"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Create a static folder in your project directory. Inside the static folder create CSS or styles folder and create a CSS stylesheet. We use the"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "url_for"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "module to serve the static file."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "layout.html"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link\n      href=\"https://fonts.googleapis.com/css?family=Lato:300,400|Nunito:300,400|Raleway:300,400,500&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"{{ url_for('static', filename='css/main.css') }}\"\n    />\n    {% if title %}\n    <title>30 Days of Python - {{ title}}</title>\n    {% else %}\n    <title>30 Days of Python</title>\n    {% endif %}\n  </head>\n\n  <body>\n    <header>\n      <div class=\"menu-container\">\n        <div>\n          <a class=\"brand-name nav-link\" href=\"/\">30DaysOfPython</a>\n        </div>\n        <ul class=\"nav-lists\">\n          <li class=\"nav-list\">\n            <a class=\"nav-link active\" href=\"{{ url_for('home') }}\">Home</a>\n          </li>\n          <li class=\"nav-list\">\n            <a class=\"nav-link active\" href=\"{{ url_for('about') }}\">About</a>\n          </li>\n          <li class=\"nav-list\">\n            <a class=\"nav-link active\" href=\"{{ url_for('post') }}\"\n              >Text Analyzer</a\n            >\n          </li>\n        </ul>\n      </div>\n    </header>\n    <main>\n      {% block content %} {% endblock %}\n    </main>\n  </body>\n</html>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Now, lets remove all the repeated code in the other template files and import the layout.html. The href is using"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "url_for"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "function with the name of the route function to connect each navigation route."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "home.html"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "{% extends 'layout.html' %} {% block content %}\n<div class=\"container\">\n  <h1>Welcome to {{name}}</h1>\n  <p>\n    This application clean texts and analyse the number of word, characters and\n    most frequent words in the text. Check it out by click text analyzer at the\n    menu. You need the following technologies to build this web application:\n  </p>\n  <ul class=\"tech-lists\">\n    {% for tech in techs %}\n    <li class=\"tech\">{{tech}}</li>\n\n    {% endfor %}\n  </ul>\n</div>\n\n{% endblock %}"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "about.html"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "{% extends 'layout.html' %} {% block content %}\n<div class=\"container\">\n  <h1>About {{name}}</h1>\n  <p>\n    This is a 30 days of python programming challenge. If you have been coding\n    this far, you are awesome. Congratulations for the job well done!\n  </p>\n</div>\n{% endblock %}"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "post.html"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-html"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "{% extends 'layout.html' %} {% block content %}\n<div class=\"container\">\n  <h1>Text Analyzer</h1>\n  <form action=\"https://thirtydaysofpython-v1.herokuapp.com/post\" method=\"POST\">\n    <div>\n      <textarea rows=\"25\" name=\"content\" autofocus></textarea>\n    </div>\n    <div>\n      <input type=\"submit\" class=\"btn\" value=\"Process Text\" />\n    </div>\n  </form>\n</div>\n\n{% endblock %}"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Request methods, there are different request methods(GET, POST, PUT, DELETE) are the common request methods which allow us to do CRUD(Create, Read, Update, Delete) operation."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "In the post, route we will use GET and POST method alternative depending on the type of request, check how it looks in the code below. The request method is a function to handle request methods and also to access form data.\napp.py"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# let's import the flask\nfrom flask import Flask, render_template, request, redirect, url_for\nimport os # importing operating system module\n\napp = Flask(__name__)\n# to stop caching static file\napp.config['SEND_FILE_MAX_AGE_DEFAULT'] = 0\n\n\n\n@app.route('/') # this decorator create the home route\ndef home ():\n    techs = ['HTML', 'CSS', 'Flask', 'Python']\n    name = '30 Days Of Python Programming'\n    return render_template('home.html', techs=techs, name = name, title = 'Home')\n\n@app.route('/about')\ndef about():\n    name = '30 Days Of Python Programming'\n    return render_template('about.html', name = name, title = 'About Us')\n\n@app.route('/result')\ndef result():\n    return render_template('result.html')\n\n@app.route('/post', methods= ['GET','POST'])\ndef post():\n    name = 'Text Analyzer'\n    if request.method == 'GET':\n         return render_template('post.html', name = name, title = name)\n    if request.method =='POST':\n        content = request.form['content']\n        print(content)\n        return redirect(url_for('result'))\n\nif __name__ == '__main__':\n    # for deployment\n    # to make it work for both production and development\n    port = int(os.environ.get(\"PORT\", 5000))\n    app.run(debug=True, host='0.0.0.0', port=port)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "So far, we have seen how to use template and how to inject data to template, how to a common layout.\nNow, lets handle static file. Create a folder called static in the project director and create a folder called css. Inside css folder create main.css. Your main. css file will be linked to the layout.html."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "You don't have to write the css file, copy and use it. Let's move on to deployment."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "deployment"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Deployment"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h4",
                "attributes": {
                    "id": "creating-heroku-account"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Creating Heroku account"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Heroku provides a free deployment service for both front end and fullstack applications. Create an account on"
                    },
                    {
                        "type": "Element",
                        "tagName": "a",
                        "attributes": {
                            "href": "https://www.heroku.com/"
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "heroku"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "and install the heroku"
                    },
                    {
                        "type": "Element",
                        "tagName": "a",
                        "attributes": {
                            "href": "https://devcenter.heroku.com/articles/heroku-cli"
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "CLI"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "for you machine.\nAfter installing heroku write the following command"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h4",
                "attributes": {
                    "id": "login-to-heroku"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Login to Heroku"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "asabeneh@Asabeneh:~$ heroku login\nheroku: Press any key to open up the browser to login or q to exit:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Let's see the result by clicking any key from the keyboard. When you press any key from you keyboard it will open the heroku login page and click the login page. Then you will local machine will be connected to the remote heroku server. If you are connected to remote server, you will see this."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "asabeneh@Asabeneh:~$ heroku login\nheroku: Press any key to open up the browser to login or q to exit:\nOpening browser to https://cli-auth.heroku.com/auth/browser/be12987c-583a-4458-a2c2-ba2ce7f41610\nLogging in... done\nLogged in as asabeneh@gmail.com\nasabeneh@Asabeneh:~$"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h4",
                "attributes": {
                    "id": "create-requirements-and-procfile"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Create requirements and Procfile"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Before we push our code to remote server, we need requirements"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "requirements.txt"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Procfile"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ pip freeze\nClick==7.0\nFlask==1.1.1\nitsdangerous==1.1.0\nJinja2==2.10.3\nMarkupSafe==1.1.1\nWerkzeug==0.16.0\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ touch requirements.txt\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ pip freeze > requirements.txt\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ cat requirements.txt\nClick==7.0\nFlask==1.1.1\nitsdangerous==1.1.0\nJinja2==2.10.3\nMarkupSafe==1.1.1\nWerkzeug==0.16.0\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ touch Procfile\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$ ls\nProcfile          env/              static/\napp.py            requirements.txt  templates/\n(env) asabeneh@Asabeneh:~/Desktop/python_for_web$"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The Procfile will have the command which run the application in the web server in our case on Heroku."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "web: python app.py"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h4",
                "attributes": {
                    "id": "pushing-project-to-heroku"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Pushing project to heroku"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Now, it is ready to be deployed. Steps to deploy the application on heroku"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "git init"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "git add ."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "git commit -m \"commit message\""
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "heroku create 'name of the app as one word'"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "git push heroku master"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "heroku open(to launch the deployed application)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "After this step you will get an application like"
                    },
                    {
                        "type": "Element",
                        "tagName": "a",
                        "attributes": {
                            "href": "http://thirdaysofpython-practice.herokuapp.com/"
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "this"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "exercises-day-26"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Day 26"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "You will build"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://thirtydaysofpython-v1-final.herokuapp.com/"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "this application"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ". Only the text analyser part is left"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŽ‰ CONGRATULATIONS ! ðŸŽ‰"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "|"
                    }
                ]
            }
        ]
    }
}