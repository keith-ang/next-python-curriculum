{
    "day": 5,
    "title": "Lists",
    "content": {
        "tag": "root",
        "children": [
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Day 5 - Lists"
                    }
                ]
            },
            
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "30DaysOfPython",
                            "src": "../images/30DaysOfPython_banner3@2x.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#day-5"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ“˜ Day 5"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#lists"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Lists"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#how-to-create-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "How to Create a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#accessing-list-items-using-positive-indexing"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Accessing List Items Using Positive Indexing"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#accessing-list-items-using-negative-indexing"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Accessing List Items Using Negative Indexing"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#unpacking-list-items"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Unpacking List Items"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#slicing-items-from-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Slicing Items from a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#modifying-lists"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Modifying Lists"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#checking-items-in-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Checking Items in a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#adding-items-to-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Adding Items to a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#inserting-items-into-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Inserting Items into a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#removing-items-from-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Removing Items from a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#removing-items-using-pop"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Removing Items Using Pop"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#removing-items-using-del"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Removing Items Using Del"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#clearing-list-items"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Clearing List Items"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#copying-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Copying a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#joining-lists"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Joining Lists"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#counting-items-in-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Counting Items in a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#finding-index-of-an-item"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Finding Index of an Item"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#reversing-a-list"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Reversing a List"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#sorting-list-items"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Sorting List Items"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#-exercises-day-5"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ’» Exercises: Day 5"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#exercises-level-1"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Exercises: Level 1"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#exercises-level-2"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Exercises: Level 2"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {
                    "id": "day-5"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ“˜ Day 5"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "lists"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Lists"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "There are four collection data types in Python :"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "List: is a collection which is ordered and changeable(modifiable). Allows duplicate members."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Tuple: is a collection which is ordered and unchangeable or unmodifiable(immutable). Allows duplicate members."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Set: is a collection which is unordered, un-indexed and unmodifiable, but we can add new items to the set. Duplicate members are not allowed."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Dictionary: is a collection which is unordered, changeable(modifiable) and indexed. No duplicate members."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "A list is collection of different data types which is ordered and modifiable(mutable). A list can be empty or it may have different data type items."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "how-to-create-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "How to Create a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "In Python we can create lists in two ways:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Using list built-in function"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = list()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "empty_list = list() # this is an empty list, no item in the list\nprint(len(empty_list)) # 0"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Using square brackets, []"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = []"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "empty_list = [] # this is an empty list, no item in the list\nprint(len(empty_list)) # 0"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Lists with initial values. We use"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "len()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "to find the length of a list."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']                     # list of fruits\nvegetables = ['Tomato', 'Potato', 'Cabbage','Onion', 'Carrot']      # list of vegetables\nanimal_products = ['milk', 'meat', 'butter', 'yoghurt']             # list of animal products\nweb_techs = ['HTML', 'CSS', 'JS', 'React','Redux', 'Node', 'MongDB'] # list of web technologies\ncountries = ['Finland', 'Estonia', 'Denmark', 'Sweden', 'Norway']\n\n# Print the lists and its length\nprint('Fruits:', fruits)\nprint('Number of fruits:', len(fruits))\nprint('Vegetables:', vegetables)\nprint('Number of vegetables:', len(vegetables))\nprint('Animal products:',animal_products)\nprint('Number of animal products:', len(animal_products))\nprint('Web technologies:', web_techs)\nprint('Number of web technologies:', len(web_techs))\nprint('Countries:', countries)\nprint('Number of countries:', len(countries))"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "output\nFruits: ['banana', 'orange', 'mango', 'lemon']\nNumber of fruits: 4\nVegetables: ['Tomato', 'Potato', 'Cabbage', 'Onion', 'Carrot']\nNumber of vegetables: 5\nAnimal products: ['milk', 'meat', 'butter', 'yoghurt']\nNumber of animal products: 4\nWeb technologies: ['HTML', 'CSS', 'JS', 'React', 'Redux', 'Node', 'MongDB']\nNumber of web technologies: 7\nCountries: ['Finland', 'Estonia', 'Denmark', 'Sweden', 'Norway']\nNumber of countries: 5"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Lists can have items of different data types"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "lst = ['Asabeneh', 250, True, {'country':'Finland', 'city':'Helsinki'}] # list containing different data types"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "accessing-list-items-using-positive-indexing"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Accessing List Items Using Positive Indexing"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We access each item in a list using their index. A list index starts from 0. The picture below shows clearly where the index starts"
                    },
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "List index",
                            "src": "../images/list_index.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfirst_fruit = fruits[0] # we are accessing the first item using its index\nprint(first_fruit)      # banana\nsecond_fruit = fruits[1]\nprint(second_fruit)     # orange\nlast_fruit = fruits[3]\nprint(last_fruit) # lemon\n# Last index\nlast_index = len(fruits) - 1\nlast_fruit = fruits[last_index]"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "accessing-list-items-using-negative-indexing"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Accessing List Items Using Negative Indexing"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Negative indexing means beginning from the end, -1 refers to the last item, -2 refers to the second last item."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "List negative indexing",
                            "src": "../images/list_negative_indexing.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfirst_fruit = fruits[-4]\nlast_fruit = fruits[-1]\nsecond_last = fruits[-2]\nprint(first_fruit)      # banana\nprint(last_fruit)       # lemon\nprint(second_last)      # mango"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "unpacking-list-items"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Unpacking List Items"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "lst = ['item1','item2','item3', 'item4', 'item5']\nfirst_item, second_item, third_item, *rest = lst\nprint(first_item)     # item1\nprint(second_item)    # item2\nprint(third_item)     # item3\nprint(rest)           # ['item4', 'item5']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# First Example\nfruits = ['banana', 'orange', 'mango', 'lemon','lime','apple']\nfirst_fruit, second_fruit, third_fruit, *rest = fruits \nprint(first_fruit)     # banana\nprint(second_fruit)    # orange\nprint(third_fruit)     # mango\nprint(rest)           # ['lemon','lime','apple']\n# Second Example about unpacking list\nfirst, second, third,*rest, tenth = [1,2,3,4,5,6,7,8,9,10]\nprint(first)          # 1\nprint(second)         # 2\nprint(third)          # 3\nprint(rest)           # [4,5,6,7,8,9]\nprint(tenth)          # 10\n# Third Example about unpacking list\ncountries = ['Germany', 'France','Belgium','Sweden','Denmark','Finland','Norway','Iceland','Estonia']\ngr, fr, bg, sw, *scandic, es = countries\nprint(gr)\nprint(fr)\nprint(bg)\nprint(sw)\nprint(scandic)\nprint(es)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "slicing-items-from-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Slicing Items from a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Positive Indexing: We can specify a range of positive indexes by specifying the start, end and step, the return value will be a new list. (default values for start = 0, end = len(lst) - 1 (last item), step = 1)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nall_fruits = fruits[0:4] # it returns all the fruits\n# this will also give the same result as the one above\nall_fruits = fruits[0:] # if we don't set where to stop it takes all the rest\norange_and_mango = fruits[1:3] # it does not include the first index\norange_mango_lemon = fruits[1:]\norange_and_lemon = fruits[::2] # here we used a 3rd argument, step. It will take every 2cnd item - ['banana', 'mango']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Negative Indexing: We can specify a range of negative indexes by specifying the start, end and step, the return value will be a new list."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nall_fruits = fruits[-4:] # it returns all the fruits\norange_and_mango = fruits[-3:-1] # it does not include the last index,['orange', 'mango']\norange_mango_lemon = fruits[-3:] # this will give starting from -3 to the end,['orange', 'mango', 'lemon']\nreverse_fruits = fruits[::-1] # a negative step will take the list in reverse order,['lemon', 'mango', 'orange', 'banana']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "modifying-lists"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Modifying Lists"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "List is a mutable or modifiable ordered collection of items. Lets modify the fruit list."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfruits[0] = 'avocado'\nprint(fruits)       #  ['avocado', 'orange', 'mango', 'lemon']\nfruits[1] = 'apple'\nprint(fruits)       #  ['avocado', 'apple', 'mango', 'lemon']\nlast_index = len(fruits) - 1\nfruits[last_index] = 'lime'\nprint(fruits)        #  ['avocado', 'apple', 'mango', 'lime']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "checking-items-in-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Checking Items in a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Checking an item if it is a member of a list using"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "in"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "operator. See the example below."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\ndoes_exist = 'banana' in fruits\nprint(does_exist)  # True\ndoes_exist = 'lime' in fruits\nprint(does_exist)  # False"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "adding-items-to-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Adding Items to a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "To add item to the end of an existing list we use the method"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "append()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = list()\nlst.append(item)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfruits.append('apple')\nprint(fruits)           # ['banana', 'orange', 'mango', 'lemon', 'apple']\nfruits.append('lime')   # ['banana', 'orange', 'mango', 'lemon', 'apple', 'lime']\nprint(fruits)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "inserting-items-into-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Inserting Items into a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We can use"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "insert()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method to insert a single item at a specified index in a list. Note that other items are shifted to the right. The"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "insert()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "methods takes two arguments:index and an item to insert."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\nlst.insert(index, item)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfruits.insert(2, 'apple') # insert apple between orange and mango\nprint(fruits)           # ['banana', 'orange', 'apple', 'mango', 'lemon']\nfruits.insert(3, 'lime')   # ['banana', 'orange', 'apple', 'lime', 'mango', 'lemon']\nprint(fruits)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "removing-items-from-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Removing Items from a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The remove method removes a specified item from a list"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\nlst.remove(item)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon', 'banana']\nfruits.remove('banana')\nprint(fruits)  # ['orange', 'mango', 'lemon', 'banana'] - this method removes the first occurrence of the item in the list\nfruits.remove('lemon')\nprint(fruits)  # ['orange', 'mango', 'banana']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "removing-items-using-pop"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Removing Items Using Pop"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "pop()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method removes the specified index, (or the last item if index is not specified):"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\nlst.pop()       # last item\nlst.pop(index)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfruits.pop()\nprint(fruits)       # ['banana', 'orange', 'mango']\n\nfruits.pop(0)\nprint(fruits)       # ['orange', 'mango']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "removing-items-using-del"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Removing Items Using Del"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "del"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "keyword removes the specified index and it can also be used to delete items within index range. It can also delete the list completely"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\ndel lst[index] # only a single item\ndel lst        # to delete the list completely"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon', 'kiwi', 'lime']\ndel fruits[0]\nprint(fruits)       # ['orange', 'mango', 'lemon', 'kiwi', 'lime']\ndel fruits[1]\nprint(fruits)       # ['orange', 'lemon', 'kiwi', 'lime']\ndel fruits[1:3]     # this deletes items between given indexes, so it does not delete the item with index 3!\nprint(fruits)       # ['orange', 'lime']\ndel fruits\nprint(fruits)       # This should give: NameError: name 'fruits' is not defined"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "clearing-list-items"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Clearing List Items"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "clear()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method empties the list:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\nlst.clear()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfruits.clear()\nprint(fruits)       # []"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "copying-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Copying a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "It is possible to copy a list by reassigning it to a new variable in the following way: list2 = list1. Now, list2 is a reference of list1, any changes we make in list2 will also modify the original, list1. But there are lots of case in which we do not like to modify the original instead we like to have a different copy. One of way of avoiding the problem above is using"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "copy()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\nlst_copy = lst.copy()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfruits_copy = fruits.copy()\nprint(fruits_copy)       # ['banana', 'orange', 'mango', 'lemon']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "joining-lists"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Joining Lists"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "There are several ways to join, or concatenate, two or more lists in Python."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Plus Operator (+)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlist3 = list1 + list2"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "positive_numbers = [1, 2, 3, 4, 5]\nzero = [0]\nnegative_numbers = [-5,-4,-3,-2,-1]\nintegers = negative_numbers + zero + positive_numbers\nprint(integers) # [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\nfruits = ['banana', 'orange', 'mango', 'lemon']\nvegetables = ['Tomato', 'Potato', 'Cabbage', 'Onion', 'Carrot']\nfruits_and_vegetables = fruits + vegetables\nprint(fruits_and_vegetables ) # ['banana', 'orange', 'mango', 'lemon', 'Tomato', 'Potato', 'Cabbage', 'Onion', 'Carrot']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Joining using extend() method\n  The"
                            },
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "extend()"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "method allows to append list in a list. See the example below."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlist1 = ['item1', 'item2']\nlist2 = ['item3', 'item4', 'item5']\nlist1.extend(list2)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "num1 = [0, 1, 2, 3]\nnum2= [4, 5, 6]\nnum1.extend(num2)\nprint('Numbers:', num1) # Numbers: [0, 1, 2, 3, 4, 5, 6]\nnegative_numbers = [-5,-4,-3,-2,-1]\npositive_numbers = [1, 2, 3,4,5]\nzero = [0]\n\nnegative_numbers.extend(zero)\nnegative_numbers.extend(positive_numbers)\nprint('Integers:', negative_numbers) # Integers: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\nfruits = ['banana', 'orange', 'mango', 'lemon']\nvegetables = ['Tomato', 'Potato', 'Cabbage', 'Onion', 'Carrot']\nfruits.extend(vegetables)\nprint('Fruits and vegetables:', fruits ) # Fruits and vegetables: ['banana', 'orange', 'mango', 'lemon', 'Tomato', 'Potato', 'Cabbage', 'Onion', 'Carrot']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "counting-items-in-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Counting Items in a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "count()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method returns the number of times an item appears in a list:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\nlst.count(item)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nprint(fruits.count('orange'))   # 1\nages = [22, 19, 24, 25, 26, 24, 25, 24]\nprint(ages.count(24))           # 3"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "finding-index-of-an-item"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Finding Index of an Item"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "index()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method returns the index of an item in the list:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\nlst.index(item)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nprint(fruits.index('orange'))   # 1\nages = [22, 19, 24, 25, 26, 24, 25, 24]\nprint(ages.index(24))           # 2, the first occurrence"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "reversing-a-list"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Reversing a List"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "reverse()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method reverses the order of a list."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nlst = ['item1', 'item2']\nlst.reverse()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "fruits = ['banana', 'orange', 'mango', 'lemon']\nfruits.reverse()\nprint(fruits) # ['lemon', 'mango', 'orange', 'banana']\nages = [22, 19, 24, 25, 26, 24, 25, 24]\nages.reverse()\nprint(ages) # [24, 25, 24, 26, 25, 24, 19, 22]"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "sorting-list-items"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Sorting List Items"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "To sort lists we can use"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "sort()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method or"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "sorted()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "built-in functions. The"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "sort()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method reorders the list items in ascending order and modifies the original list. If an argument of"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "sort()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method reverse is equal to true, it will arrange the list in descending order."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "sort(): this method modifies the original list"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "py\n  # syntax\n  lst = ['item1', 'item2']\n  lst.sort()                # ascending\n  lst.sort(reverse=True)    # descending"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "```py\n  fruits = ['banana', 'orange', 'mango', 'lemon']\n  fruits.sort()\n  print(fruits)             # sorted in alphabetical order, ['banana', 'lemon', 'mango', 'orange']\n  fruits.sort(reverse=True)\n  print(fruits) # ['orange', 'mango', 'lemon', 'banana']\n  ages = [22, 19, 24, 25, 26, 24, 25, 24]\n  ages.sort()\n  print(ages) #  [19, 22, 24, 24, 24, 25, 25, 26]"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ages.sort(reverse=True)\n  print(ages) #  [26, 25, 25, 24, 24, 24, 22, 19]\n  ```"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "sorted(): returns the ordered list without modifying the original list"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "py\n  fruits = ['banana', 'orange', 'mango', 'lemon']\n  print(sorted(fruits))   # ['banana', 'lemon', 'mango', 'orange']\n  # Reverse order\n  fruits = ['banana', 'orange', 'mango', 'lemon']\n  fruits = sorted(fruits,reverse=True)\n  print(fruits)     # ['orange', 'mango', 'lemon', 'banana']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŒ• You are diligent and you have already achieved quite a lot. You have just completed day 5 challenges and you are 5 steps a head in to your way to greatness. Now do some exercises for your brain and muscles."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "exercises-day-5"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ’» Exercises: Day 5"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "exercises-level-1"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Level 1"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Declare an empty list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Declare a list with more than 5 items"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Find the length of your list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Get the first item, the middle item and the last item of the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Declare a list called mixed_data_types, put your(name, age, height, marital status, address)"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Declare a list variable named it_companies and assign initial values Facebook, Google, Microsoft, Apple, IBM, Oracle and Amazon."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Print the list using"
                            },
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "print()"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Print the number of companies in the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Print the first, middle and last company"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Print the list after modifying one of the companies"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Add an IT company to it_companies"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Insert an IT company in the middle of the companies list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Change one of the it_companies names to uppercase (IBM excluded!)"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Join the it_companies with a string '#;Â  '"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Check if a certain company exists in the it_companies list."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Sort the list using sort() method"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Reverse the list in descending order using reverse() method"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Slice out the first 3 companies from the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Slice out the last 3 companies from the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Slice out the middle IT company or companies from the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Remove the first IT company from the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Remove the middle IT company or companies from the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Remove the last IT company from the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Remove all IT companies from the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Destroy the IT companies list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "p",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Join the following lists:"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "p",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "code",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Text",
                                                "content": "py\nfront_end = ['HTML', 'CSS', 'JS', 'React', 'Redux']\nback_end = ['Node','Express', 'MongoDB']"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "p",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "After joining the lists in question 26. Copy the joined list and assign it to a variable full_stack, then insert Python and SQL after Redux."
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "exercises-level-2"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Level 2"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "The following is a list of 10 students ages:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "ages = [19, 22, 19, 24, 20, 25, 26, 24, 25, 24]"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Sort the list and find the min and max age"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Add the min age and the max age again to the list"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Find the median age (one middle item or two middle items divided by two)"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Find the average age (sum of all items divided by their number )"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Find the range of the ages (max minus min)"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "p",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Compare the value of (min - average) and (max - average), use"
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "em",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Text",
                                                "content": "abs()"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Text",
                                        "content": "method"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "p",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Find the middle country(ies) in the"
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "a",
                                        "attributes": {
                                            "href": "https://github.com/Asabeneh/30-Days-Of-Python/tree/master/data/countries.py"
                                        },
                                        "children": [
                                            {
                                                "type": "Text",
                                                "content": "countries list"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Divide the countries list into two equal lists if it is even if not one more country for the first half."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "['China', 'Russia', 'USA', 'Finland', 'Sweden', 'Norway', 'Denmark']. Unpack the first three countries and the rest as scandic countries."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŽ‰ CONGRATULATIONS ! ðŸŽ‰"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "|"
                    }
                ]
            }
        ]
    }
}