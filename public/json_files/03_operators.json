{
    "day": 3,
    "title": "Operators",
    "content": {
        "tag": "root",
        "children": [
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Day 3 - Operators"
                    }
                ]
            },
            
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "30DaysOfPython",
                            "src": "../images/30DaysOfPython_banner3@2x.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#-day-3"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ“˜ Day 3"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#boolean"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Boolean"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#operators"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Operators"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#assignment-operators"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Assignment Operators"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#arithmetic-operators"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Arithmetic Operators:"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#comparison-operators"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Comparison Operators"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#logical-operators"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Logical Operators"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#-exercises---day-3"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ’» Exercises - Day 3"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {
                    "id": "day-3"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ“˜ Day 3"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "boolean"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Boolean"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "A boolean data type represents one of the two values:"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "True"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "or"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "False"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": ". The use of these data types will be clear once we start using the comparison operator. The first letter"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "T"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "for True and"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "F"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "for False should be capital unlike JavaScript."
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example: Boolean Values"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "print(True)\nprint(False)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "operators"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Operators"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Python language supports several types of operators. In this section, we will focus on few of them."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "assignment-operators"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Assignment Operators"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Assignment operators are used to assign values to variables. Let us take = as an example. Equal sign in mathematics shows that two values are equal, however in Python it means we are storing a value in a certain variable and we call it assignment or a assigning value to a variable. The table below shows the different types of python assignment operators, taken from"
                    },
                    {
                        "type": "Element",
                        "tagName": "a",
                        "attributes": {
                            "href": "https://www.w3schools.com/python/python_operators.asp"
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "w3school"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "Assignment Operators",
                            "src": "../images/assignment_operators.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "arithmetic-operators"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Arithmetic Operators:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Addition(+): a + b"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Subtraction(-): a - b"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Multiplication(*): a * b"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Division(/): a / b"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Modulus(%): a % b"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Floor division(//): a // b"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Exponentiation(**): a ** b"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "Arithmetic Operators",
                            "src": "../images/arithmetic_operators.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:Integers"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# Arithmetic Operations in Python\n# Integers\n\nprint('Addition: ', 1 + 2)        # 3\nprint('Subtraction: ', 2 - 1)     # 1\nprint('Multiplication: ', 2 * 3)  # 6\nprint ('Division: ', 4 / 2)       # 2.0  Division in Python gives floating number\nprint('Division: ', 6 / 2)        # 3.0         \nprint('Division: ', 7 / 2)        # 3.5\nprint('Division without the remainder: ', 7 // 2)   # 3,  gives without the floating number or without the remaining\nprint ('Division without the remainder: ',7 // 3)   # 2\nprint('Modulus: ', 3 % 2)         # 1, Gives the remainder\nprint('Exponentiation: ', 2 ** 3) # 9 it means 2 * 2 * 2"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:Floats"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# Floating numbers\nprint('Floating Point Number, PI', 3.14)\nprint('Floating Point Number, gravity', 9.81)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:Complex numbers"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# Complex numbers\nprint('Complex number: ', 1 + 1j)\nprint('Multiplying complex numbers: ',(1 + 1j) * (1 - 1j))"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Let's declare a variable and assign a number data type. I am going to use single character variable but remember do not develop a habit of declaring such types of variables. Variable names should be all the time mnemonic."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-python"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# Declaring the variable at the top first\n\na = 3 # a is a variable name and 3 is an integer data type\nb = 2 # b is a variable name and 3 is an integer data type\n\n# Arithmetic operations and assigning the result to a variable\ntotal = a + b\ndiff = a - b\nproduct = a * b\ndivision = a / b\nremainder = a % b\nfloor_division = a // b\nexponential = a ** b\n\n# I should have used sum instead of total but sum is a built-in function - try to avoid overriding built-in functions\nprint(total) # if you do not label your print with some string, you never know where the result is coming from\nprint('a + b = ', total)\nprint('a - b = ', diff)\nprint('a * b = ', product)\nprint('a / b = ', division)\nprint('a % b = ', remainder)\nprint('a // b = ', floor_division)\nprint('a ** b = ', exponentiation)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "print('== Addition, Subtraction, Multiplication, Division, Modulus ==')\n\n# Declaring values and organizing them together\nnum_one = 3\nnum_two = 4\n\n# Arithmetic operations\ntotal = num_one + num_two\ndiff = num_two - num_one\nproduct = num_one * num_two\ndiv = num_two / num_one\nremainder = num_two % num_one\n\n# Printing values with label\nprint('total: ', total)\nprint('difference: ', diff)\nprint('product: ', product)\nprint('division: ', div)\nprint('remainder: ', remainder)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Let us start start connecting the dots and start making use of what we already know to calculate (area, volume,density,  weight, perimeter, distance, force)."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# Calculating area of a circle\nradius = 10                                 # radius of a circle\narea_of_circle = 3.14 * radius ** 2         # two * sign means exponent or power\nprint('Area of a circle:', area_of_circle)\n\n# Calculating area of a rectangle\nlength = 10\nwidth = 20\narea_of_rectangle = length * width\nprint('Area of rectangle:', area_of_rectangle)\n\n# Calculating a weight of an object\nmass = 75\ngravity = 9.81\nweight = mass * gravity\nprint(weight, 'N')                         # Adding unit to the weight\n\n# Calculate the density of a liquid\nmass = 75 # in Kg\nvolume = 0.075 # in cubic meter\ndensity = mass / volume # 1000 Kg/m^3"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "comparison-operators"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Comparison Operators"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "In programming we compare values, we use comparison operators to compare two values. We check if a value is greater or less or equal to other value. The following table shows Python comparison operators which was taken from"
                    },
                    {
                        "type": "Element",
                        "tagName": "a",
                        "attributes": {
                            "href": "https://www.w3schools.com/python/python_operators.asp"
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "w3shool"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "Comparison Operators",
                            "src": "../images/comparison_operators.png"
                        }
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example: Comparison Operators"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "print(3 > 2)     # True, because 3 is greater than 2\nprint(3 >= 2)    # True, because 3 is greater than 2\nprint(3 < 2)     # False,  because 3 is greater than 2\nprint(2 < 3)     # True, because 2 is less than 3\nprint(2 <= 3)    # True, because 2 is less than 3\nprint(3 == 2)    # False, because 3 is not equal to 2\nprint(3 != 2)    # True, because 3 is not equal to 2\nprint(len('mango') == len('avocado'))  # False\nprint(len('mango') != len('avocado'))  # True\nprint(len('mango') < len('avocado'))   # True\nprint(len('milk') != len('meat'))      # False\nprint(len('milk') == len('meat'))      # True\nprint(len('tomato') == len('potato'))  # True\nprint(len('python') > len('dragon'))   # False\n\n\n# Comparing something gives either a True or False\n\nprint('True == True: ', True == True)\nprint('True == False: ', True == False)\nprint('False == False:', False == False)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "In addition to the above comparison operator Python uses:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "is"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ": Returns true if both variables are the same object(x is y)"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "is not"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ": Returns true if both variables are not the same object(x is not y)"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "in"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ": Returns True if the queried list contains a certain item(x in y)"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "not in"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ": Returns True if the queried list doesn't have a certain item(x in y)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "print('1 is 1', 1 is 1)                   # True - because the data values are the same\nprint('1 is not 2', 1 is not 2)           # True - because 1 is not 2\nprint('A in Asabeneh', 'A' in 'Asabeneh') # True - A found in the string\nprint('B in Asabeneh', 'B' in 'Asabeneh') # False - there is no uppercase B\nprint('coding' in 'coding for all') # True - because coding for all has the word coding\nprint('a in an:', 'a' in 'an')      # True\nprint('4 is 2 ** 2:', 4 is 2 ** 2)   # True"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "logical-operators"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Logical Operators"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Unlike other programming languages python uses keywords"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "and"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": ","
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "or"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "and"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "not"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "for logical operators. Logical operators are used to combine conditional statements:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "Logical Operators",
                            "src": "../images/logical_operators.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "print(3 > 2 and 4 > 3) # True - because both statements are true\nprint(3 > 2 and 4 < 3) # False - because the second statement is false\nprint(3 < 2 and 4 < 3) # False - because both statements are false\nprint('True and True: ', True and True)\nprint(3 > 2 or 4 > 3)  # True - because both statements are true\nprint(3 > 2 or 4 < 3)  # True - because one of the statements is true\nprint(3 < 2 or 4 < 3)  # False - because both statements are false\nprint('True or False:', True or False)\nprint(not 3 > 2)     # False - because 3 > 2 is true, then not True gives False\nprint(not True)      # False - Negation, the not operator turns true to false\nprint(not False)     # True\nprint(not not True)  # True\nprint(not not False) # False"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŒ• You have boundless energy. You have just completed day 3 challenges and you are three steps ahead on your way to greatness. Now do some exercises for your brain and your muscles."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "exercises-day-3"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ’» Exercises - Day 3"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Declare your age as integer variable"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Declare your height as a float variable"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Declare a variable that store a complex number"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Write a script that prompts the user to enter base and height of the triangle and calculate an area of this triangle (area = 0.5 x b x h)."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "Enter base: 20\n    Enter height: 10\n    The area of the triangle is 100"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Write a script that prompts the user to enter side a, side b, and side c of the triangle. Calculate the perimeter of the triangle (perimeter = a + b + c)."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "Enter side a: 5\nEnter side b: 4\nEnter side c: 3\nThe perimeter of the triangle is 12"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Get length and width of a rectangle using prompt. Calculate its area (area = length x width) and perimeter (perimeter = 2 x (length + width))"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Get radius of a circle using prompt. Calculate the area (area = pi x r x r) and circumference (c = 2 x pi x r) where pi = 3.14."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Calculate the slope, x-intercept and y-intercept of y = 2x -2"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Slope is (m = y2-y1/x2-x1). Find the slope and"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://en.wikipedia.org/wiki/Euclidean_distance#:~:text=In%20mathematics%2C%20the%20Euclidean%20distance,being%20called%20the%20Pythagorean%20distance."
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Euclidean distance"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "between point (2, 2) and point (6,10)"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Compare the slopes in tasks 8 and 9."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Calculate the value of y (y = x^2 + 6x + 9). Try to use different x values and figure out at what x value y is going to be 0."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Find the length of 'python' and 'dragon' and make a falsy comparison statement."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Use"
                            },
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "and"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "operator to check if 'on' is found in both 'python' and 'dragon'"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "I hope this course is not full of jargon"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ". Use"
                            },
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "in"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "operator to check if"
                            },
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "jargon"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "is in the sentence."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "There is no 'on' in both dragon and python"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Find the length of the text"
                            },
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "python"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "and convert the value to float and convert it to string"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Even numbers are divisible by 2 and the remainder is zero. How do you check if a number is even or not using python?"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Check if the floor division of 7 by 3 is equal to the int converted value of 2.7."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Check if type of '10' is equal to type of 10"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Check if int('9.8') is equal to 10"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Writ a script that prompts the user to enter hours and rate per hour. Calculate pay of the person?"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "Enter hours: 40\nEnter rate per hour: 28\nYour weekly earning is 1120"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Write a script that prompts the user to enter number of years. Calculate the number of seconds a person can live. Assume a person can live hundred years"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "Enter number of years you have lived: 100\nYou have lived for 3153600000 seconds."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Write a Python script that displays the following table"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "1 1 1 1 1\n2 1 2 4 8\n3 1 3 9 27\n4 1 4 16 64\n5 1 5 25 125"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŽ‰ CONGRATULATIONS ! ðŸŽ‰"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "|"
                    }
                ]
            }
        ]
    }
}