{
    "day": 19,
    "title": "File Handling",
    "content": {
        "tag": "root",
        "children": [
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Day 19 - File Handling"
                    }
                ]
            },
            
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "30DaysOfPython",
                            "src": "../images/30DaysOfPython_banner3@2x.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#-day-19"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ“˜ Day 19"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#file-handling"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "File Handling"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#opening-files-for-reading"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Opening Files for Reading"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#opening-files-for-writing-and-updating"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Opening Files for Writing and Updating"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#deleting-files"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Deleting Files"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#file-types"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "File Types"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#file-with-txt-extension"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "File with txt Extension"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#file-with-json-extension"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "File with json Extension"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#changing-json-to-dictionary"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Changing JSON to Dictionary"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#changing-dictionary-to-json"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Changing Dictionary to JSON"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#saving-as-json-file"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Saving as JSON File"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#file-with-csv-extension"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "File with csv Extension"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#file-with-xlsx-extension"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "File with xlsx Extension"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#file-with-xml-extension"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "File with xml Extension"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#-exercises-day-19"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ’» Exercises: Day 19"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#exercises-level-1"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Exercises: Level 1"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#exercises-level-2"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Exercises: Level 2"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#exercises-level-3"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Exercises: Level 3"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {
                    "id": "day-19"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ“˜ Day 19"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "file-handling"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "File Handling"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "So far we have seen different Python data types. We usually store our data in different file formats. In addition to handling files, we will also see different file formats(.txt, .json, .xml, .csv, .tsv, .excel) in this section. First, let us get familiar with handling files with common file format(.txt)."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "File handling is an import part of programming which allows us to create, read, update and delete files. In Python to handle data we use"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "open()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "built-in function."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# Syntax\nopen('filename', mode) # mode(r, a, w, x, t,b)  could be to read, write, update"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"r\" - Read - Default value. Opens a file for reading, it returns an error if the file does not exist"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"a\" - Append - Opens a file for appending, creates the file if it does not exist"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"w\" - Write - Opens a file for writing, creates the file if it does not exist"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"x\" - Create - Creates the specified file, returns an error if the file exists"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"t\" - Text - Default value. Text mode"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"b\" - Binary - Binary mode (e.g. images)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "opening-files-for-reading"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Opening Files for Reading"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The default mode of"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "open"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "is reading, so we do not have to specify 'r' or 'rt'. I have created and saved a file named reading_file_example.txt in the files directory. Let us see how it is done:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "f = open('./files/reading_file_example.txt')\nprint(f) # <_io.TextIOWrapper name='./files/reading_file_example.txt' mode='r' encoding='UTF-8'>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "As you can see in the example above, I printed the opened file and it gave  some information about it. Opened file has different reading methods:"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "read()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": ","
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "readline"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": ","
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "readlines"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": ". An opened file has to be closed with"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "close()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "read()"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ": read the whole text as string. If we want to limit the number of characters we want to read, we can limit it by passing int value to the"
                            },
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "read(number)"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "method."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "f = open('./files/reading_file_example.txt')\ntxt = f.read()\nprint(type(txt))\nprint(txt)\nf.close()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\n<class 'str'>\nThis is an example to show how to open a file and read.\nThis is the second line of the text."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Instead of printing all the text, let us print the first 10 characters of the text file."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "f = open('./files/reading_file_example.txt')\ntxt = f.read(10)\nprint(type(txt))\nprint(txt)\nf.close()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\n<class 'str'>\nThis is an"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "readline()"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ": read only the first line"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "f = open('./files/reading_file_example.txt')\nline = f.readline()\nprint(type(line))\nprint(line)\nf.close()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\n<class 'str'>\nThis is an example to show how to open a file and read."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "readlines()"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": ": read all the text line by line and returns a list of lines"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "f = open('./files/reading_file_example.txt')\nlines = f.readlines()\nprint(type(lines))\nprint(lines)\nf.close()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\n<class 'list'>\n['This is an example to show how to open a file and read.\\n', 'This is the second line of the text.']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Another way to get all the lines as a list is using"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "splitlines()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": ":"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "f = open('./files/reading_file_example.txt')\nlines = f.read().splitlines()\nprint(type(lines))\nprint(lines)\nf.close()"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\n<class 'list'>\n['This is an example to show how to open a file and read.', 'This is the second line of the text.']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "After we open a file, we should close it. There is a high tendency of forgetting to close them. There is a new way of opening files using"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "with"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "- closes the files by itself. Let us rewrite the the previous example with the"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "with"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "with open('./files/reading_file_example.txt') as f:\n    lines = f.read().splitlines()\n    print(type(lines))\n    print(lines)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\n<class 'list'>\n['This is an example to show how to open a file and read.', 'This is the second line of the text.']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "opening-files-for-writing-and-updating"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Opening Files for Writing and Updating"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "To write to an existing file, we must add a mode as parameter to the"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "open()"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "function:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"a\" - append - will append to the end of the file, if the file does not it creates a new file."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"w\" - write - will overwrite any existing content, if the file does not exist it creates."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Let us append some text to the file we have been reading:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "with open('./files/reading_file_example.txt','a') as f:\n    f.write('This text has to be appended at the end')"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "The method below creates a new file, if the file does not exist:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "with open('./files/writing_file_example.txt','w') as f:\n    f.write('This text will be written in a newly created file')"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "deleting-files"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Deleting Files"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We have seen in previous section, how to make and remove a directory using"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "os"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "module. Again now, if we want to remove a file we use"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "os"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "module."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "import os\nos.remove('./files/example.txt')"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "If the file does not exist, the remove method will raise an error, so it is good to use a condition like this:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "import os\nif os.path.exists('./files/example.txt'):\n    os.remove('./files/example.txt')\nelse:\n    print('The file does not exist')"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "file-types"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "File Types"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "file-with-txt-extension"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "File with txt Extension"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "File with"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "txt"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "extension is a very common form of data and we have covered it in the previous section. Let us move to the JSON file"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "file-with-json-extension"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "File with json Extension"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "JSON stands for JavaScript Object Notation. Actually, it is a stringified JavaScript object or Python dictionary."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# dictionary\nperson_dct= {\n    \"name\":\"Asabeneh\",\n    \"country\":\"Finland\",\n    \"city\":\"Helsinki\",\n    \"skills\":[\"JavaScrip\", \"React\",\"Python\"]\n}\n# JSON: A string form a dictionary\nperson_json = \"{'name': 'Asabeneh', 'country': 'Finland', 'city': 'Helsinki', 'skills': ['JavaScrip', 'React', 'Python']}\"\n\n# we use three quotes and make it multiple line to make it more readable\nperson_json = '''{\n    \"name\":\"Asabeneh\",\n    \"country\":\"Finland\",\n    \"city\":\"Helsinki\",\n    \"skills\":[\"JavaScrip\", \"React\",\"Python\"]\n}'''"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "changing-json-to-dictionary"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Changing JSON to Dictionary"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "To change a JSON to a dictionary, first we import the json module and then we use"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "loads"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "import json\n# JSON\nperson_json = '''{\n    \"name\": \"Asabeneh\",\n    \"country\": \"Finland\",\n    \"city\": \"Helsinki\",\n    \"skills\": [\"JavaScrip\", \"React\", \"Python\"]\n}'''\n# let's change JSON to dictionary\nperson_dct = json.loads(person_json)\nprint(type(person_dct))\nprint(person_dct)\nprint(person_dct['name'])"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\n<class 'dict'>\n{'name': 'Asabeneh', 'country': 'Finland', 'city': 'Helsinki', 'skills': ['JavaScrip', 'React', 'Python']}\nAsabeneh"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "changing-dictionary-to-json"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Changing Dictionary to JSON"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "To change a dictionary to a JSON we use"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "dumps"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "method from the json module."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "import json\n# python dictionary\nperson = {\n    \"name\": \"Asabeneh\",\n    \"country\": \"Finland\",\n    \"city\": \"Helsinki\",\n    \"skills\": [\"JavaScrip\", \"React\", \"Python\"]\n}\n# let's convert it to  json\nperson_json = json.dumps(person, indent=4) # indent could be 2, 4, 8. It beautifies the json\nprint(type(person_json))\nprint(person_json)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\n# when you print it, it does not have the quote, but actually it is a string\n# JSON does not have type, it is a string type.\n<class 'str'>\n{\n    \"name\": \"Asabeneh\",\n    \"country\": \"Finland\",\n    \"city\": \"Helsinki\",\n    \"skills\": [\n        \"JavaScrip\",\n        \"React\",\n        \"Python\"\n    ]\n}"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "saving-as-json-file"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Saving as JSON File"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We can also save our data as a json file. Let us save it as a json file using the following steps. For writing a json file, we use the json.dump() method, it can take dictionary, output file, ensure_ascii and indent."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "import json\n# python dictionary\nperson = {\n    \"name\": \"Asabeneh\",\n    \"country\": \"Finland\",\n    \"city\": \"Helsinki\",\n    \"skills\": [\"JavaScrip\", \"React\", \"Python\"]\n}\nwith open('./files/json_example.json', 'w', encoding='utf-8') as f:\n    json.dump(person, f, ensure_ascii=False, indent=4)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "In the code above, we use encoding and indentation. Indentation makes the json file easy to read."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "file-with-csv-extension"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "File with csv Extension"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "CSV stands for comma separated values. CSV is a simple file format used to store tabular data, such as a spreadsheet or database. CSV is a very common data format in data science."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-csv"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "\"name\",\"country\",\"city\",\"skills\"\n\"Asabeneh\",\"Finland\",\"Helsinki\",\"JavaScript\""
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "import csv\nwith open('./files/csv_example.csv') as f:\n    csv_reader = csv.reader(f, delimiter=',') # w use, reader method to read csv\n    line_count = 0\n    for row in csv_reader:\n        if line_count == 0:\n            print(f'Column names are :{\", \".join(row)}')\n            line_count += 1\n        else:\n            print(\n                f'\\t{row[0]} is a teachers. He lives in {row[1]}, {row[2]}.')\n            line_count += 1\n    print(f'Number of lines:  {line_count}')"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output:\nColumn names are :name, country, city, skills\n        Asabeneh is a teacher. He lives in Finland, Helsinki.\nNumber of lines:  2"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "file-with-xlsx-extension"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "File with xlsx Extension"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "To read excel files we need to install"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "xlrd"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "package. We will cover this after we cover package installing using pip."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "import xlrd\nexcel_book = xlrd.open_workbook('sample.xls)\nprint(excel_book.nsheets)\nprint(excel_book.sheet_names)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "file-with-xml-extension"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "File with xml Extension"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "XML is another structured data format which looks like HTML. In XML the tags are not predefined. The first line is an XML declaration. The person tag is the root of the XML. The person has a gender attribute."
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:XML"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-xml"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "<?xml version=\"1.0\"?>\n<person gender=\"female\">\n  <name>Asabeneh</name>\n  <country>Finland</country>\n  <city>Helsinki</city>\n  <skills>\n    <skill>JavaScrip</skill>\n    <skill>React</skill>\n    <skill>Python</skill>\n  </skills>\n</person>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "For more information on how to read an XML file check the"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "import xml.etree.ElementTree as ET\ntree = ET.parse('./files/xml_example.xml')\nroot = tree.getroot()\nprint('Root tag:', root.tag)\nprint('Attribute:', root.attrib)\nfor child in root:\n    print('field: ', child.tag)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\nRoot tag: person\nAttribute: {'gender': 'male'}\nfield: name\nfield: country\nfield: city\nfield: skills"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŒ• You are making a big progress. Maintain your momentum, keep the good work. Now do some exercises for your brain and muscles."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "exercises-day-19"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ’» Exercises: Day 19"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "exercises-level-1"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Level 1"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Write a function which count number of lines and number of words in a text. All the files are in the data the folder:\n   a) Read obama_speech.txt file and count number of lines and words\n   b) Read michelle_obama_speech.txt file and count number of lines and words\n   c) Read donald_speech.txt file and count number of lines and words\n   d) Read melina_trump_speech.txt file and count number of lines and words"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Read the countries_data.json data file in data directory, create a function that finds the ten most spoken languages"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "```py\n   # Your output should look like this\n   print(most_spoken_languages(filename='./data/countries_data.json', 10))\n   [(91, 'English'),\n   (45, 'French'),\n   (25, 'Arabic'),\n   (24, 'Spanish'),\n   (9, 'Russian'),\n   (9, 'Portuguese'),\n   (8, 'Dutch'),\n   (7, 'German'),\n   (5, 'Chinese'),\n   (4, 'Swahili'),\n   (4, 'Serbian')]"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "# Your output should look like this\n   print(most_spoken_languages(filename='./data/countries_data.json', 3))\n   [(91, 'English'),\n   (45, 'French'),\n   (25, 'Arabic')]\n   ```"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Read the countries_data.json data file in data directory, create a function that creates a list of the ten most populated countries"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "```py\n   # Your output should look like this\n   print(most_populated_countries(filename='./data/countries_data.json', 10))"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "[\n   {'country': 'China', 'population': 1377422166},\n   {'country': 'India', 'population': 1295210000},\n   {'country': 'United States of America', 'population': 323947000},\n   {'country': 'Indonesia', 'population': 258705000},\n   {'country': 'Brazil', 'population': 206135893},\n   {'country': 'Pakistan', 'population': 194125062},\n   {'country': 'Nigeria', 'population': 186988000},\n   {'country': 'Bangladesh', 'population': 161006790},\n   {'country': 'Russian Federation', 'population': 146599183},\n   {'country': 'Japan', 'population': 126960000}\n   ]"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "# Your output should look like this"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "print(most_populated_countries(filename='./data/countries_data.json', 3))\n   [\n   {'country': 'China', 'population': 1377422166},\n   {'country': 'India', 'population': 1295210000},\n   {'country': 'United States of America', 'population': 323947000}\n   ]\n   ```"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "exercises-level-2"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Level 2"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Extract all incoming email addresses as a list from the email_exchange_big.txt file."
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Find the most common words in the English language. Call the name of your function find_most_common_words, it will take two parameters - a string or a file and a positive integer, indicating the number of words. Your function will return an array of tuples in descending order. Check the output"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# Your output should look like this\n    print(find_most_common_words('sample.txt', 10))\n    [(10, 'the'),\n    (8, 'be'),\n    (6, 'to'),\n    (6, 'of'),\n    (5, 'and'),\n    (4, 'a'),\n    (4, 'in'),\n    (3, 'that'),\n    (2, 'have'),\n    (2, 'I')]\n\n    # Your output should look like this\n    print(find_most_common_words('sample.txt', 5))\n\n    [(10, 'the'),\n    (8, 'be'),\n    (6, 'to'),\n    (6, 'of'),\n    (5, 'and')]"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Use the function, find_most_frequent_words to find:\n   a) The ten most frequent words used in"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://github.com/Asabeneh/30-Days-Of-Python/blob/master/data/obama_speech.txt"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Obama's speech"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "b) The ten most frequent words used in"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://github.com/Asabeneh/30-Days-Of-Python/blob/master/data/michelle_obama_speech.txt"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Michelle's speech"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "c) The ten most frequent words used in"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://github.com/Asabeneh/30-Days-Of-Python/blob/master/data/donald_speech.txt"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Trump's speech"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "d) The ten most frequent words used in"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://github.com/Asabeneh/30-Days-Of-Python/blob/master/data/melina_trump_speech.txt"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Melina's speech"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Write a python application that checks similarity between two texts. It takes a file or a string as a parameter and it will evaluate the similarity of the two texts. For instance check the similarity between the transcripts of"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://github.com/Asabeneh/30-Days-Of-Python/blob/master/data/michelle_obama_speech.txt"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Michelle's"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "and"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://github.com/Asabeneh/30-Days-Of-Python/blob/master/data/melina_trump_speech.txt"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Melina's"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "speech. You may need a couple of functions, function to clean the text(clean_text), function to remove support words(remove_support_words) and finally to check the similarity(check_text_similarity). List of"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://github.com/Asabeneh/30-Days-Of-Python/blob/master/data/stop_words.py"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "stop words"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "are in the data directory"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Find the 10 most repeated words in the romeo_and_juliet.txt"
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Read the"
                            },
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "https://github.com/Asabeneh/30-Days-Of-Python/blob/master/data/hacker_news.csv"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "hacker news csv"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "file and find out:\n   a) Count the number of lines containing python or Python\n   b) Count the number lines containing JavaScript, javascript or Javascript\n   c) Count the number lines containing Java and not JavaScript"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "exercises-level-3"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Level 3"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŽ‰ CONGRATULATIONS ! ðŸŽ‰"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "|"
                    }
                ]
            }
        ]
    }
}