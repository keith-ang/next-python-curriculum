{
    "day": 21,
    "title": "Classes and Objects",
    "content": {
        "tag": "root",
        "children": [
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Day 21 - Classes and Objects"
                    }
                ]
            },
            
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "img",
                        "attributes": {
                            "alt": "30DaysOfPython",
                            "src": "../images/30DaysOfPython_banner3@2x.png"
                        }
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ul",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#-day-21"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ“˜ Day 21"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#classes-and-objects"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "Classes and Objects"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#creating-a-class"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Creating a Class"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#creating-an-object"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Creating an Object"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#class-constructor"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Class Constructor"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#object-methods"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Object Methods"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#object-default-methods"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Object Default Methods"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#method-to-modify-class-default-values"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Method to Modify Class Default Values"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#inheritance"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Inheritance"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#overriding-parent-method"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Overriding parent method"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "a",
                                "attributes": {
                                    "href": "#-exercises-day-21"
                                },
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "ðŸ’» Exercises: Day 21"
                                    }
                                ]
                            },
                            {
                                "type": "Element",
                                "tagName": "ul",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#exercises-level-1"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Exercises: Level 1"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#exercises-level-2"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Exercises: Level 2"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "type": "Element",
                                        "tagName": "li",
                                        "attributes": {},
                                        "children": [
                                            {
                                                "type": "Element",
                                                "tagName": "a",
                                                "attributes": {
                                                    "href": "#exercises-level-3"
                                                },
                                                "children": [
                                                    {
                                                        "type": "Text",
                                                        "content": "Exercises: Level 3"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h1",
                "attributes": {
                    "id": "day-21"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ“˜ Day 21"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "classes-and-objects"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Classes and Objects"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Python is an object oriented programming language. Everything in Python is an object, with its properties and methods. A number, string, list, dictionary, tuple, set etc. used in a program is an object of a corresponding built-in class. We create class to create an object. A class is like an object constructor, or a \"blueprint\" for creating objects. We instantiate a class to create an object. The class defines attributes and the behavior of the object, while the object, on the other hand, represents the class."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We have been working with classes and objects right from the beginning of this challenge unknowingly. Every element in a Python program is an object of a class.\nLet us check if everything in python is a class:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "asabeneh@Asabeneh:~$ python\nPython 3.9.6 (default, Jun 28 2021, 15:26:21)\n[Clang 11.0.0 (clang-1100.0.33.8)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> num = 10\n>>> type(num)\n<class 'int'>\n>>> string = 'string'\n>>> type(string)\n<class 'str'>\n>>> boolean = True\n>>> type(boolean)\n<class 'bool'>\n>>> lst = []\n>>> type(lst)\n<class 'list'>\n>>> tpl = ()\n>>> type(tpl)\n<class 'tuple'>\n>>> set1 = set()\n>>> type(set1)\n<class 'set'>\n>>> dct = {}\n>>> type(dct)\n<class 'dict'>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "creating-a-class"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Creating a Class"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "To create a class we need the key word"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "class"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "followed by the name and colon. Class name should be"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "CamelCase"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# syntax\nclass ClassName:\n  code goes here"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "class Person:\n  pass\nprint(Person)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "<__main__.Person object at 0x10804e510>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "creating-an-object"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Creating an Object"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We can create an object by calling the class."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "p = Person()\nprint(p)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "class-constructor"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Class Constructor"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "In the examples above, we have created an object from the Person class. However, a class without a constructor is not really useful in real applications. Let us use constructor function to make our class more useful. Like the constructor function in Java or JavaScript, Python has also a built-in"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "strong",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "init"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "() constructor function. The"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "strong",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "init"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "constructor function has self parameter which is a reference to the current instance of the class"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Examples:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "class Person:\n      def __init__ (self, name):\n        # self allows to attach parameter to the class\n          self.name =name\n\np = Person('Asabeneh')\nprint(p.name)\nprint(p)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\nAsabeneh\n<__main__.Person object at 0x2abf46907e80>"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Let us add more parameters to the constructor function."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "class Person:\n      def __init__(self, firstname, lastname, age, country, city):\n          self.firstname = firstname\n          self.lastname = lastname\n          self.age = age\n          self.country = country\n          self.city = city\n\n\np = Person('Asabeneh', 'Yetayeh', 250, 'Finland', 'Helsinki')\nprint(p.firstname)\nprint(p.lastname)\nprint(p.age)\nprint(p.country)\nprint(p.city)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\nAsabeneh\nYetayeh\n250\nFinland\nHelsinki"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "object-methods"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Object Methods"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Objects can have methods. The methods are functions which belong to the object."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "class Person:\n      def __init__(self, firstname, lastname, age, country, city):\n          self.firstname = firstname\n          self.lastname = lastname\n          self.age = age\n          self.country = country\n          self.city = city\n      def person_info(self):\n        return f'{self.firstname} {self.lastname} is {self.age} years old. He lives in {self.city}, {self.country}'\n\np = Person('Asabeneh', 'Yetayeh', 250, 'Finland', 'Helsinki')\nprint(p.person_info())"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\nAsabeneh Yetayeh is 250 years old. He lives in Helsinki, Finland"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "object-default-methods"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Object Default Methods"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Sometimes, you may want to have a default values for your object methods. If we give default values for the parameters in the constructor, we can avoid errors when we call or instantiate our class without parameters. Let's see how it looks:"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Example:"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "class Person:\n      def __init__(self, firstname='Asabeneh', lastname='Yetayeh', age=250, country='Finland', city='Helsinki'):\n          self.firstname = firstname\n          self.lastname = lastname\n          self.age = age\n          self.country = country\n          self.city = city\n\n      def person_info(self):\n        return f'{self.firstname} {self.lastname} is {self.age} years old. He lives in {self.city}, {self.country}.'\n\np1 = Person()\nprint(p1.person_info())\np2 = Person('John', 'Doe', 30, 'Nomanland', 'Noman city')\nprint(p2.person_info())"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\nAsabeneh Yetayeh is 250 years old. He lives in Helsinki, Finland.\nJohn Doe is 30 years old. He lives in Noman city, Nomanland."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "method-to-modify-class-default-values"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Method to Modify Class Default Values"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "In the example below, the person class, all the constructor parameters have default values. In addition to that, we have skills parameter, which we can access using a method. Let us create add_skill method to add skills to the skills list."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "class Person:\n      def __init__(self, firstname='Asabeneh', lastname='Yetayeh', age=250, country='Finland', city='Helsinki'):\n          self.firstname = firstname\n          self.lastname = lastname\n          self.age = age\n          self.country = country\n          self.city = city\n          self.skills = []\n\n      def person_info(self):\n        return f'{self.firstname} {self.lastname} is {self.age} years old. He lives in {self.city}, {self.country}.'\n      def add_skill(self, skill):\n          self.skills.append(skill)\n\np1 = Person()\nprint(p1.person_info())\np1.add_skill('HTML')\np1.add_skill('CSS')\np1.add_skill('JavaScript')\np2 = Person('John', 'Doe', 30, 'Nomanland', 'Noman city')\nprint(p2.person_info())\nprint(p1.skills)\nprint(p2.skills)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# output\nAsabeneh Yetayeh is 250 years old. He lives in Helsinki, Finland.\nJohn Doe is 30 years old. He lives in Noman city, Nomanland.\n['HTML', 'CSS', 'JavaScript']\n[]"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "inheritance"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Inheritance"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "Using inheritance we can reuse parent class code. Inheritance allows us to define a class that inherits all the methods and properties from parent class. The parent class or super or base class is the class which gives all the methods and properties. Child class is the class that inherits from another or parent class.\nLet us create a student class by inheriting from person class."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "class Student(Person):\n    pass\n\n\ns1 = Student('Eyob', 'Yetayeh', 30, 'Finland', 'Helsinki')\ns2 = Student('Lidiya', 'Teklemariam', 28, 'Finland', 'Espoo')\nprint(s1.person_info())\ns1.add_skill('JavaScript')\ns1.add_skill('React')\ns1.add_skill('Python')\nprint(s1.skills)\n\nprint(s2.person_info())\ns2.add_skill('Organizing')\ns2.add_skill('Marketing')\ns2.add_skill('Digital Marketing')\nprint(s2.skills)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "output\nEyob Yetayeh is 30 years old. He lives in Helsinki, Finland.\n['JavaScript', 'React', 'Python']\nLidiya Teklemariam is 28 years old. He lives in Espoo, Finland.\n['Organizing', 'Marketing', 'Digital Marketing']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We did not call the"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "strong",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "init"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "() constructor in the child class. If we didn't call it then we can still access all the properties from the parent. But if we do call the constructor we can access the parent properties by calling"
                    },
                    {
                        "type": "Element",
                        "tagName": "em",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "super"
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "."
                    },
                    {
                        "type": "Element",
                        "tagName": "br",
                        "attributes": {}
                    },
                    {
                        "type": "Text",
                        "content": "We can add a new method to the child or we can override the parent class methods by creating the same method name in the child class. When we add the"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "strong",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "init"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "() function, the child class will no longer inherit the parent's"
                    },
                    {
                        "type": "Element",
                        "tagName": "strong",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Element",
                                "tagName": "strong",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "init"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "Text",
                        "content": "() function."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "overriding-parent-method"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Overriding parent method"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "class Student(Person):\n    def __init__ (self, firstname='Asabeneh', lastname='Yetayeh',age=250, country='Finland', city='Helsinki', gender='male'):\n        self.gender = gender\n        super().__init__(firstname, lastname,age, country, city)\n    def person_info(self):\n        gender = 'He' if self.gender =='male' else 'She'\n        return f'{self.firstname} {self.lastname} is {self.age} years old. {gender} lives in {self.city}, {self.country}.'\n\ns1 = Student('Eyob', 'Yetayeh', 30, 'Finland', 'Helsinki','male')\ns2 = Student('Lidiya', 'Teklemariam', 28, 'Finland', 'Espoo', 'female')\nprint(s1.person_info())\ns1.add_skill('JavaScript')\ns1.add_skill('React')\ns1.add_skill('Python')\nprint(s1.skills)\n\nprint(s2.person_info())\ns2.add_skill('Organizing')\ns2.add_skill('Marketing')\ns2.add_skill('Digital Marketing')\nprint(s2.skills)"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "Eyob Yetayeh is 30 years old. He lives in Helsinki, Finland.\n['JavaScript', 'React', 'Python']\nLidiya Teklemariam is 28 years old. She lives in Espoo, Finland.\n['Organizing', 'Marketing', 'Digital Marketing']"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "We can use super() built-in function or the parent name Person to automatically inherit the methods and properties from its parent. In the example above we override the parent method. The child method has a different feature, it can identify, if the gender is male or female and assign the proper pronoun(He/She)."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŒ• Now, you are fully charged with a super power of programming.  Now do some exercises for your brain and muscles."
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h2",
                "attributes": {
                    "id": "exercises-day-21"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸ’» Exercises: Day 21"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "exercises-level-1"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Level 1"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Python has the module called"
                            },
                            {
                                "type": "Element",
                                "tagName": "em",
                                "attributes": {},
                                "children": [
                                    {
                                        "type": "Text",
                                        "content": "statistics"
                                    }
                                ]
                            },
                            {
                                "type": "Text",
                                "content": "and we can use this module to do all the statistical calculations. However, to learn how to make function and reuse function let us try to develop a program, which calculates the measure of central tendency of a sample (mean, median, mode) and measure of variability (range, variance, standard deviation). In addition to those measures, find the min, max, count, percentile, and frequency distribution of the sample. You can create a class called Statistics and create all the functions that do statistical calculations as methods for the Statistics class. Check the output below."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-py"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "ages = [31, 26, 34, 37, 27, 26, 32, 32, 26, 27, 27, 24, 32, 33, 27, 25, 26, 38, 37, 31, 34, 24, 33, 29, 26]\n\nprint('Count:', data.count()) # 25\nprint('Sum: ', data.sum()) # 744\nprint('Min: ', data.min()) # 24\nprint('Max: ', data.max()) # 38\nprint('Range: ', data.range() # 14\nprint('Mean: ', data.mean()) # 30\nprint('Median: ', data.median()) # 29\nprint('Mode: ', data.mode()) # {'mode': 26, 'count': 5}\nprint('Standard Deviation: ', data.std()) # 4.2\nprint('Variance: ', data.var()) # 17.5\nprint('Frequency Distribution: ', data.freq_dist()) # [(20.0, 26), (16.0, 27), (12.0, 32), (8.0, 37), (8.0, 34), (8.0, 33), (8.0, 31), (8.0, 24), (4.0, 38), (4.0, 29), (4.0, 25)]"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "pre",
                "attributes": {
                    "className": [
                        "codehilite"
                    ]
                },
                "children": [
                    {
                        "type": "Element",
                        "tagName": "code",
                        "attributes": {
                            "className": [
                                "language-sh"
                            ]
                        },
                        "children": [
                            {
                                "type": "Text",
                                "content": "# you output should look like this\nprint(data.describe())\nCount: 25\nSum:  744\nMin:  24\nMax:  38\nRange:  14\nMean:  30\nMedian:  29\nMode:  (26, 5)\nVariance:  17.5\nStandard Deviation:  4.2\nFrequency Distribution: [(20.0, 26), (16.0, 27), (12.0, 32), (8.0, 37), (8.0, 34), (8.0, 33), (8.0, 31), (8.0, 24), (4.0, 38), (4.0, 29), (4.0, 25)]"
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "exercises-level-2"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Level 2"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "ol",
                "attributes": {},
                "children": [
                    {
                        "type": "Element",
                        "tagName": "li",
                        "attributes": {},
                        "children": [
                            {
                                "type": "Text",
                                "content": "Create a class called PersonAccount. It has firstname, lastname, incomes, expenses properties and it has total_income, total_expense, account_info, add_income, add_expense and account_balance methods. Incomes is a set of incomes and its description. The same goes for expenses."
                            }
                        ]
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "h3",
                "attributes": {
                    "id": "exercises-level-3"
                },
                "children": [
                    {
                        "type": "Text",
                        "content": "Exercises: Level 3"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "ðŸŽ‰ CONGRATULATIONS ! ðŸŽ‰"
                    }
                ]
            },
            {
                "type": "Element",
                "tagName": "p",
                "attributes": {},
                "children": [
                    {
                        "type": "Text",
                        "content": "|"
                    }
                ]
            }
        ]
    }
}